{"version":3,"sources":["components/Background/Background.tsx","components/Card/CardTitle/CardTitle.tsx","components/Card/Card.tsx","components/CardForm/CardForm.jsx","components/Select/Select.tsx","components/NoWeatherCard/img/noWeather.png","components/NoWeatherCard/NoWeatherCard.tsx","components/Calendar/Calendar.tsx","assets/cities.js","components/CardWeather/CardWeather.tsx","components/ForecastForDay/ForecastForDay.tsx","components/ForecastForDay/useForecastForDayData.ts","components/Header/Header.tsx","components/Slider/Slider.tsx","components/SevenDaysForecast/SevenDaysForecast.tsx","components/SevenDaysForecast/useWeatherDaysData.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","props","className","children","CardTitle","cn","Card","CardForm","Select","options","onSelect","useState","visibleMenu","setVisibleMenu","activeMenuItem","setActiveMenuItem","selectInputClass","Select__current_selected","onClick","Select__arrow_top","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","map","item","i","name","selectedItemMenu","NoWeatherCard","src","img","alt","Calendar","onSelectDay","type","value","onChange","e","target","min","date","Date","formatDate","moment","format","subtract","minDate","max","maxDate","cities","lat","lon","monthShortNames","CardWeather","data","temp","dt","icon","dateSecond","day","getDate","month","getMonth","year","getFullYear","Math","floor","ForecastForDay","selectedCity","setSelectedCity","selectedDay","setSelectedDay","cityWeatherData","city","sevenDaysForecastData","setSevenDaysForecastData","useEffect","a","parse","axios","get","console","log","getForecastData","useForecastForDayData","current","weather","cardWeatherData","Header","Slider","startIndex","setStartIndex","endIndex","leftButtonClass","Slider__button_disabled","rightButtonClass","length","slice","SevenDaysForecast","useWeatherDaysData","daily","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2efa289.chunk.js","sourcesContent":["import React from 'react'\nimport './Background.scss'\n\nexport const Background = (props: any) => {\n  return (\n    <div className=\"Background\">\n      {props.children}\n    </div>\n  )\n}\n\nexport default Background\n","import React from 'react'\nimport './CardTitle.scss'\nimport cn from 'classnames'\n\nexport interface ICardTitleProps {\n  className: any,\n}\n\nexport const CardTitle: React.FC<ICardTitleProps> = (props) => {\n  const { children, className } = props\n  return (\n    <div className={cn('CardTitle', className)}>\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport './Card.scss'\n\n// export interface ICardProps {\n//   description: any\n// }\n\nexport const Card: React.FC = (props) => {\n  const { children } = props\n  return (\n    <div className=\"Card\">\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport './CardForm.scss'\n\nexport const CardForm = (props) => {\n  const { children } = props\n  return (\n    <div className=\"CardForm\">\n      {children}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport cn from 'classnames'\nimport './Select.scss'\n\nexport interface ISelectProps {\n  options: any,\n  className: string,\n  onSelect: any\n\n}\n\nexport const Select: React.FC<ISelectProps> = (props) => {\n  const { children, options, className, onSelect } = props\n\n  const [visibleMenu, setVisibleMenu] = useState(false)\n  const [activeMenuItem, setActiveMenuItem] = useState('')\n\n  const toggleVisibleMenu = () => {\n    setVisibleMenu(!visibleMenu)\n  }\n\n  const selectedItemMenu = (item: any) => {\n    onSelect(item)\n    setActiveMenuItem(item.name)\n  }\n\n  const selectInputClass = cn('Select__current', {\n    Select__current_selected: activeMenuItem\n  })\n\n  return (\n    <div className={cn('Select', className)} onClick={ toggleVisibleMenu }>\n      <div className=\"Select__header\">\n        <div className={selectInputClass}><span>{activeMenuItem || children}</span></div>\n        <div className=\"Select__icon\">\n          <svg className={cn({ Select__arrow_top: visibleMenu })} width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.2929 4.29297L14.7071 5.70718L8.00001 12.4143L1.29291 5.70718L2.70712 4.29297L8.00001 9.58586L13.2929 4.29297Z\" fill=\"#8083A4\"/>\n          </svg>\n        </div>\n      </div>\n        {visibleMenu &&\n            <div className=\"Select__menu\">\n              {options.map((item: any, i: any) =>\n                <div key={`${item.name}${i}`} className=\"Select__item\" onClick={() => selectedItemMenu(item)}><span>{item.name}</span></div>)\n              }\n            </div>\n          }\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/noWeather.a09393d9.png\";","import React from 'react'\nimport cn from 'classnames'\nimport img from './img/noWeather.png'\nimport './NoWeatherCard.scss'\n\nexport interface INoWeatherCardProps {\n  className: String,\n}\n\nexport const NoWeatherCard: React.FC<INoWeatherCardProps> = ({ className }) => {\n  return (\n    <div className={cn('NoWeatherCard', className)}>\n      <img className=\"NoWeatherCard__img\" src={img} alt=\"noWeather\" width=\"160\" height=\"160\" />\n      <span className=\"NoWeatherCard__title\">\n        Fill in all the fields and the weather will be displayed\n      </span>\n    </div>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\nimport './Calendar.scss'\n\nexport interface ICalendarProps {\n  onSelectDay: any\n}\n\nexport const Calendar: React.FC<ICalendarProps> = ({ onSelectDay }) => {\n  const handleChange = (e: any) => {\n    onSelectDay(e.target.value)\n  }\n\n  const minDate = () => {\n    const date = new Date()\n    const formatDate = moment(date).format('YYYY-MM-DD')\n    return moment(formatDate).subtract(5, 'days').format('YYYY-MM-DD')\n  }\n\n  const maxDate = () => {\n    const date = new Date()\n    return moment(date).format('YYYY-MM-DD')\n  }\n  // getFormatDay(date)\n  // const minDay = 1\n\n  return (\n    <div className=\"Calendar\">\n      <input className=\"Calendar__input\" type=\"date\" value=\"\" onChange={handleChange} min={minDate()} max={maxDate()}/>\n    </div>\n  )\n}\n","export const cities = [\n  { name: 'Самара', lat: 53.195873, lon: 50.100193 },\n  { name: 'Тольятти', lat: 53.507836, lon: 49.420393 },\n  { name: 'Саратов', lat: 51.533557, lon: 46.034257 },\n  { name: 'Казань', lat: 55.796127, lon: 49.106405 },\n  { name: 'Краснодар', lat: 45.035470, lon: 38.975313 }\n]\n","import React from 'react'\nimport cn from 'classnames'\nimport './CardWeather.scss'\nexport interface ICardWeatherProps {\n  data: any,\n  className: any;\n}\n\nconst monthShortNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\n\nexport const CardWeather: React.FC<ICardWeatherProps> = ({ data, className }) => {\n  const { temp, dt, icon } = data\n  // const icon = data.weather[0].icon\n\n  const formatDate = (dateSecond: any) => {\n    const date = new Date(dateSecond * 1000)\n\n    const day = date.getDate()\n    const month = monthShortNames[date.getMonth()]\n    const year = date.getFullYear()\n\n    return `${day} ${month} ${year}`\n  }\n\n  return (\n    <div className={cn('CardWeather', className)}>\n      <div className=\"CardWeather__date\">\n        {formatDate(dt)}\n      </div>\n      <div className=\"CardWeather__icon\">\n        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"weather\"/>\n      </div>\n      <div className=\"CardWeather__temperature\">\n        +{Math.floor(temp.day)}&deg;\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { CardTitle } from '../Card/CardTitle'\nimport { Card } from '../Card'\nimport { CardForm } from '../CardForm'\nimport { Select } from '../Select'\nimport { NoWeatherCard } from '../NoWeatherCard'\nimport { Calendar } from '../Calendar'\nimport { cities } from '../../assets/cities'\nimport { useForecastForDayData } from './useForecastForDayData'\nimport { CardWeather } from '../CardWeather/CardWeather'\nimport './ForecastForDay.scss'\n\nexport const ForecastForDay = () => {\n  const [selectedCity, setSelectedCity] = useState()\n  const [selectedDay, setSelectedDay] = useState()\n\n  const cityWeatherData = useForecastForDayData(selectedCity, selectedDay)\n\n  const cardWeatherData = () => {\n    const { dt, temp } = cityWeatherData.current\n    const icon = cityWeatherData.current.weather[0].icon\n    return { dt, temp: { day: temp }, icon }\n  }\n\n  return (\n    <Card>\n      <CardTitle className=\"ForecastForDay__title\">Forecast for a Date in the Past</CardTitle>\n      <CardForm>\n        <Select options={ cities } className=\"ForecastForDay__select\" onSelect={ setSelectedCity }>\n          Select city\n        </Select>\n        <Calendar onSelectDay={setSelectedDay} />\n      </CardForm>\n\n      {cityWeatherData\n        ? <CardWeather data={cardWeatherData()} className=\"ForecastForDay__card\" />\n        : <NoWeatherCard className=\"ForecastForDay__noCard\"/>\n      }\n    </Card>\n\n  )\n}\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport const useForecastForDayData = (city: any, day: any) => {\n  const [sevenDaysForecastData, setSevenDaysForecastData] = useState<any>()\n\n  useEffect(() => {\n    const getForecastData = async () => {\n      const { lat, lon } = city\n      const dt = Date.parse(day) / 1000\n\n      const { data } = await axios.get(\n        `http://api.openweathermap.org/data/2.5/onecall/timemachine?units=metric&lat=${lat}&lon=${lon}&dt=${dt}&appid=94f6f0535fb640ce9b8b030ad3d5f5ee`\n      )\n\n      console.log(data)\n      setSevenDaysForecastData(data)\n    }\n\n    if (city && day) {\n      getForecastData()\n    }\n  }, [city, day])\n\n  return sevenDaysForecastData\n}\n","import React from 'react'\nimport './Header.scss'\nimport cn from 'classnames'\n\nexport interface IHeaderInterface {\n  className: string\n}\n\nexport const Header: React.FC<IHeaderInterface> = (props) => {\n  return (\n    <div className={cn('Header', props.className)}>\n      <div className=\"Header__left-world\">Weather</div>\n      <div className=\"Header__right-world\">forecast</div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport cn from 'classnames'\nimport './Slider.scss'\nimport { CardWeather } from '../CardWeather/CardWeather'\n\nexport interface ISliderProps {\n  className: string,\n  cardWeatherData: any\n}\n\nexport const Slider: React.FC<ISliderProps> = ({ className, cardWeatherData }: any) => {\n  const [startIndex, setStartIndex] = useState(0)\n  const step = 3\n  const endIndex = startIndex + step\n\n  const displaySelectedCard = () => {\n    const selectedCardsData = cardWeatherData.slice(startIndex, endIndex)\n    return selectedCardsData.map((data: any) => {\n      const { dt, temp } = data\n      const icon = data.weather[0].icon\n      return <CardWeather data={{ dt, temp, icon } } key={data.dt} className=\"\"/>\n    }\n    )\n  }\n\n  const leftButtonClass = cn('Slider__button', 'Slider__button_left', { Slider__button_disabled: startIndex <= 0 })\n  const rightButtonClass = cn('Slider__button', 'Slider__button_right', { Slider__button_disabled: endIndex === cardWeatherData.length })\n\n  return (\n    <div className={cn('Slider', className)}>\n      <div className={leftButtonClass} onClick={() => setStartIndex(startIndex - 1)}>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.5858 12.0001L7.29286 19.293L8.70708 20.7072L17.4142 12.0001L8.70708 3.29297L7.29286 4.70718L14.5858 12.0001Z\" fill=\"#8083A4\"/>\n        </svg>\n      </div>\n      {displaySelectedCard()}\n      <div className={rightButtonClass} onClick={() => setStartIndex(startIndex + 1)}>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.5858 12.0001L7.29286 19.293L8.70708 20.7072L17.4142 12.0001L8.70708 3.29297L7.29286 4.70718L14.5858 12.0001Z\" fill=\"#8083A4\"/>\n        </svg>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { CardTitle } from '../Card/CardTitle'\nimport { Card } from '../Card'\nimport { CardForm } from '../CardForm'\nimport { Select } from '../Select'\nimport { NoWeatherCard } from '../NoWeatherCard'\nimport { Slider } from '../Slider/Slider'\nimport { useWeatherDaysData } from './useWeatherDaysData'\nimport { cities } from '../../assets/cities.js'\nimport './SevenDaysForecast.scss'\n\nexport const SevenDaysForecast = () => {\n  const [selectedCity, setSelectedCity] = useState<any>()\n\n  const cityWeatherData = useWeatherDaysData(selectedCity)\n\n  // const { temp, dt } = data;\n\n  // const icon = data.weather[0].icon;\n\n  return (\n    <Card>\n      <CardTitle className=\"SevenDaysForecast__title\">7 Days Forecast</CardTitle>\n      <CardForm>\n        <Select options={ cities } className=\"SevenDaysForecast__select\" onSelect={setSelectedCity}>\n          Select city\n        </Select>\n      </CardForm>\n       {cityWeatherData\n         ? <Slider className=\"SevenDaysForecast__slider\" cardWeatherData ={cityWeatherData.daily}/>\n         : <NoWeatherCard className=\"SevenDaysForecast__noWeather\" />}\n    </Card>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport const useWeatherDaysData = (city: any) => {\n  const [sevenDaysForecastData, setSevenDaysForecastData] = useState<any>()\n\n  useEffect(() => {\n    const getForecastData = async () => {\n      const { lat, lon } = city\n      const { data } = await axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?units=metric&lat=${lat}&lon=${lon}&exclude=alerts,current,minutely,hourly&appid=94f6f0535fb640ce9b8b030ad3d5f5ee`\n      )\n      setSevenDaysForecastData(data)\n    }\n\n    if (city) {\n      getForecastData()\n    }\n  }, [city])\n\n  return sevenDaysForecastData\n}\n","import React from 'react'\nimport './App.scss'\nimport Background from './components/Background/Background'\nimport { ForecastForDay } from './components/ForecastForDay/ForecastForDay'\nimport { Header } from './components/Header'\nimport { SevenDaysForecast } from './components/SevenDaysForecast/SevenDaysForecast'\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Background>\n        <div className=\"App__wrapper\">\n          <Header className=\"App__header\"></Header>\n          <main className=\"App__main\">\n            <SevenDaysForecast />\n            <ForecastForDay />\n          </main>\n          <footer className=\"App__footer\">C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</footer>\n        </div>\n\n      </Background>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}